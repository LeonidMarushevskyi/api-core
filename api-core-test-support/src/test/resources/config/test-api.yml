applicationName: CWDS CALS API
version: local

server:
  applicationConnectors:
  - type: http
    port: 9080
  - type: https
    port: 9433
    keyStorePath: "./config/testKeyStore.jks"
    keyStorePassword: testPass
    keyStoreType: JKS
    supportedProtocols: [TLSv1, TLSv1.1, TLSv1.2]
  adminConnectors:
  - type: http
    port: 9091

shiro:
 iniConfigs: ["classpath:api-core-test-support-shiro.ini"]

swagger:
  templateName: swagger.mustache
  assetsPath: /static
  resourcePackage: gov.ca.cwds.cals.web.rest
  title: CWDS CALC API
  description: RESTful API definitions for the CWS New System.
  logo: images/CWDS-API-Logo-Horizontal.png
  loginUrl: http://localhost:8090/authn/login
  showSwagger: true

fasDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:fas;INIT=create schema if not exists fas\;set schema fas
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

cmsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwscms;INIT=create schema if not exists cwscms\;set schema cwscms
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: cwscms
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

cmsrsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwscmsrs;INIT=create schema if not exists cwscmsrs\;set schema cwscmsrs
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: cwscmsrs
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

lisDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:lis;INIT=create schema if not exists lis\;set schema lis
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: lis
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

nsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:calsns;INIT=create schema if not exists calsns\;set schema calsns
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: 2
  minSize: 2
  maxSize: 8
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: gov.ca.cwds.cals.persistence.hibernate.dialect.JsonbSupportH2Dialect
      #hibernate.default_schema: CALSNS
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      hibernate.cache.use_query_cache: true

webSecurity:
  httpResponseSecurityHeaders:
    # Prevent MIMI sniffing
    X-Content-Type-Options: nosniff

    # Prevent click-jacking
    X-Frame-Options: deny

    # Prevent cross site scripting
    X-XSS-Protection: 1; mode=block

    # Prevent everything other than same origin
    Content-Security-Policy: default-src 'self' 'unsafe-inline';

